<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd ">

	<bean class="java.net.URI" id="dbUrl">
    		<constructor-arg value="#{systemEnvironment['CLEARDB_DATABASE_URL']}"/>
	</bean>

	<bean class="java.net.URI" id="redisUrl">
    		<constructor-arg value="#{systemEnvironment['REDISCLOUD_URL']}"/>
	</bean>

	<!-- Initialization for data source -->
	<!--bean id="dataSource" class="db.mysql.DBConn"> </bean -->
	<bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="#{ 'jdbc:mysql://' + @dbUrl.getHost() + @dbUrl.getPath() }" />
		<property name="username" value="#{ @dbUrl.getUserInfo().split(':')[0] }" />
		<property name="password" value="#{ @dbUrl.getUserInfo().split(':')[1] }" />
		<property name="jmxEnabled" value="true" />
		<property name="testWhileIdle" value="false" />
		<property name="testOnBorrow" value="true" />
		<property name="validationQuery" value="SELECT 1" />
		<property name="testOnReturn" value="false" />
		<property name="validationInterval" value="30000" />
		<property name="timeBetweenEvictionRunsMillis" value="30000" />
		<property name="maxActive" value="100" />
		<property name="initialSize" value="10" />
		<property name="maxWait" value="10000" />
		<property name="removeAbandonedTimeout" value="60" />
		<property name="minEvictableIdleTimeMillis" value="30000" />
		<property name="minIdle" value="10" />
		<property name="logAbandoned" value="true" />
		<property name="removeAbandoned" value="true" />
		<property name="jdbcInterceptors"
			value="org.apache.tomcat.jdbc.pool.interceptor.ConnectionState;org.apache.tomcat.jdbc.pool.interceptor.StatementFinalizer" />
	</bean>

	<!-- Definition for categoryJDBCTemplate bean -->
	<bean id="categoryJDBCTemplate" class="db.mysql.CategoryJDBCTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- Definition for itemJDBCTemplate bean -->
	<bean id="itemJDBCTemplate" class="db.mysql.ItemJDBCTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- Definition for userJDBCTemplate bean -->
	<bean id="userJDBCTemplate" class="db.mysql.UserJDBCTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- Definition for reviewJDBCTemplate bean -->
	<bean id="reviewJDBCTemplate" class="db.mysql.ReviewJDBCTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- Jedis ConnectionFactory -->
	<bean id="jedisConnFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="hostName" value="#{ @redisUri.getHost() }" />
		<property name="port" value="#{ @redisUri.getPort() }" />
		<property name="password" value="#{ redisUri.getUserInfo().split(":",2)[1]) }"/>
		<property name="timeout" value="2000" />
		<!--property name="hostName" value="localhost" />
		<property name="port" value="6379" />
		<property name="timeout" value="2000" /-->
	</bean>

	<!-- redis template definition -->
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="jedisConnFactory" />
		<property name="hashKeySerializer">
			<bean
				class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
		<property name="keySerializer">
			<bean
				class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
		<property name="valueSerializer">
			<bean
				class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
		<property name="hashValueSerializer">
			<bean
				class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
		<property name="stringSerializer">
			<bean
				class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
	</bean>

	<bean name="redisUtilsTemplate" class="db.redis.RedisUtilsTemplate">
		<property name="redisTemplate" ref="redisTemplate" />
	</bean>
</beans>
